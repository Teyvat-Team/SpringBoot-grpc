// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: table.proto

package com.wr.grpc.lib.table;

/**
 * Protobuf type {@code table.TableList}
 */
public final class TableList extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:table.TableList)
    TableListOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TableList.newBuilder() to construct.
  private TableList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TableList() {
    dbName_ = "";
    dbTable_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TableList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TableList(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            dbName_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              dbTable_ = new java.util.ArrayList<com.wr.grpc.lib.table.DBTable>();
              mutable_bitField0_ |= 0x00000001;
            }
            dbTable_.add(
                input.readMessage(com.wr.grpc.lib.table.DBTable.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        dbTable_ = java.util.Collections.unmodifiableList(dbTable_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.wr.grpc.lib.table.TableInfo.internal_static_table_TableList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.wr.grpc.lib.table.TableInfo.internal_static_table_TableList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.wr.grpc.lib.table.TableList.class, com.wr.grpc.lib.table.TableList.Builder.class);
  }

  public static final int DBNAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object dbName_;
  /**
   * <code>string dbName = 1;</code>
   * @return The dbName.
   */
  @java.lang.Override
  public java.lang.String getDbName() {
    java.lang.Object ref = dbName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dbName_ = s;
      return s;
    }
  }
  /**
   * <code>string dbName = 1;</code>
   * @return The bytes for dbName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDbNameBytes() {
    java.lang.Object ref = dbName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dbName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DBTABLE_FIELD_NUMBER = 2;
  private java.util.List<com.wr.grpc.lib.table.DBTable> dbTable_;
  /**
   * <code>repeated .table.DBTable dbTable = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.wr.grpc.lib.table.DBTable> getDbTableList() {
    return dbTable_;
  }
  /**
   * <code>repeated .table.DBTable dbTable = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.wr.grpc.lib.table.DBTableOrBuilder> 
      getDbTableOrBuilderList() {
    return dbTable_;
  }
  /**
   * <code>repeated .table.DBTable dbTable = 2;</code>
   */
  @java.lang.Override
  public int getDbTableCount() {
    return dbTable_.size();
  }
  /**
   * <code>repeated .table.DBTable dbTable = 2;</code>
   */
  @java.lang.Override
  public com.wr.grpc.lib.table.DBTable getDbTable(int index) {
    return dbTable_.get(index);
  }
  /**
   * <code>repeated .table.DBTable dbTable = 2;</code>
   */
  @java.lang.Override
  public com.wr.grpc.lib.table.DBTableOrBuilder getDbTableOrBuilder(
      int index) {
    return dbTable_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDbNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dbName_);
    }
    for (int i = 0; i < dbTable_.size(); i++) {
      output.writeMessage(2, dbTable_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDbNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dbName_);
    }
    for (int i = 0; i < dbTable_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, dbTable_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.wr.grpc.lib.table.TableList)) {
      return super.equals(obj);
    }
    com.wr.grpc.lib.table.TableList other = (com.wr.grpc.lib.table.TableList) obj;

    if (!getDbName()
        .equals(other.getDbName())) return false;
    if (!getDbTableList()
        .equals(other.getDbTableList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DBNAME_FIELD_NUMBER;
    hash = (53 * hash) + getDbName().hashCode();
    if (getDbTableCount() > 0) {
      hash = (37 * hash) + DBTABLE_FIELD_NUMBER;
      hash = (53 * hash) + getDbTableList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.wr.grpc.lib.table.TableList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.wr.grpc.lib.table.TableList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.wr.grpc.lib.table.TableList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.wr.grpc.lib.table.TableList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.wr.grpc.lib.table.TableList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code table.TableList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:table.TableList)
      com.wr.grpc.lib.table.TableListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wr.grpc.lib.table.TableInfo.internal_static_table_TableList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wr.grpc.lib.table.TableInfo.internal_static_table_TableList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wr.grpc.lib.table.TableList.class, com.wr.grpc.lib.table.TableList.Builder.class);
    }

    // Construct using com.wr.grpc.lib.table.TableList.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDbTableFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      dbName_ = "";

      if (dbTableBuilder_ == null) {
        dbTable_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        dbTableBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.wr.grpc.lib.table.TableInfo.internal_static_table_TableList_descriptor;
    }

    @java.lang.Override
    public com.wr.grpc.lib.table.TableList getDefaultInstanceForType() {
      return com.wr.grpc.lib.table.TableList.getDefaultInstance();
    }

    @java.lang.Override
    public com.wr.grpc.lib.table.TableList build() {
      com.wr.grpc.lib.table.TableList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.wr.grpc.lib.table.TableList buildPartial() {
      com.wr.grpc.lib.table.TableList result = new com.wr.grpc.lib.table.TableList(this);
      int from_bitField0_ = bitField0_;
      result.dbName_ = dbName_;
      if (dbTableBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dbTable_ = java.util.Collections.unmodifiableList(dbTable_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dbTable_ = dbTable_;
      } else {
        result.dbTable_ = dbTableBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.wr.grpc.lib.table.TableList) {
        return mergeFrom((com.wr.grpc.lib.table.TableList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.wr.grpc.lib.table.TableList other) {
      if (other == com.wr.grpc.lib.table.TableList.getDefaultInstance()) return this;
      if (!other.getDbName().isEmpty()) {
        dbName_ = other.dbName_;
        onChanged();
      }
      if (dbTableBuilder_ == null) {
        if (!other.dbTable_.isEmpty()) {
          if (dbTable_.isEmpty()) {
            dbTable_ = other.dbTable_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDbTableIsMutable();
            dbTable_.addAll(other.dbTable_);
          }
          onChanged();
        }
      } else {
        if (!other.dbTable_.isEmpty()) {
          if (dbTableBuilder_.isEmpty()) {
            dbTableBuilder_.dispose();
            dbTableBuilder_ = null;
            dbTable_ = other.dbTable_;
            bitField0_ = (bitField0_ & ~0x00000001);
            dbTableBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDbTableFieldBuilder() : null;
          } else {
            dbTableBuilder_.addAllMessages(other.dbTable_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.wr.grpc.lib.table.TableList parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.wr.grpc.lib.table.TableList) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object dbName_ = "";
    /**
     * <code>string dbName = 1;</code>
     * @return The dbName.
     */
    public java.lang.String getDbName() {
      java.lang.Object ref = dbName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dbName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string dbName = 1;</code>
     * @return The bytes for dbName.
     */
    public com.google.protobuf.ByteString
        getDbNameBytes() {
      java.lang.Object ref = dbName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string dbName = 1;</code>
     * @param value The dbName to set.
     * @return This builder for chaining.
     */
    public Builder setDbName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dbName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string dbName = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDbName() {
      
      dbName_ = getDefaultInstance().getDbName();
      onChanged();
      return this;
    }
    /**
     * <code>string dbName = 1;</code>
     * @param value The bytes for dbName to set.
     * @return This builder for chaining.
     */
    public Builder setDbNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dbName_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.wr.grpc.lib.table.DBTable> dbTable_ =
      java.util.Collections.emptyList();
    private void ensureDbTableIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dbTable_ = new java.util.ArrayList<com.wr.grpc.lib.table.DBTable>(dbTable_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.wr.grpc.lib.table.DBTable, com.wr.grpc.lib.table.DBTable.Builder, com.wr.grpc.lib.table.DBTableOrBuilder> dbTableBuilder_;

    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public java.util.List<com.wr.grpc.lib.table.DBTable> getDbTableList() {
      if (dbTableBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dbTable_);
      } else {
        return dbTableBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public int getDbTableCount() {
      if (dbTableBuilder_ == null) {
        return dbTable_.size();
      } else {
        return dbTableBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public com.wr.grpc.lib.table.DBTable getDbTable(int index) {
      if (dbTableBuilder_ == null) {
        return dbTable_.get(index);
      } else {
        return dbTableBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder setDbTable(
        int index, com.wr.grpc.lib.table.DBTable value) {
      if (dbTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDbTableIsMutable();
        dbTable_.set(index, value);
        onChanged();
      } else {
        dbTableBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder setDbTable(
        int index, com.wr.grpc.lib.table.DBTable.Builder builderForValue) {
      if (dbTableBuilder_ == null) {
        ensureDbTableIsMutable();
        dbTable_.set(index, builderForValue.build());
        onChanged();
      } else {
        dbTableBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder addDbTable(com.wr.grpc.lib.table.DBTable value) {
      if (dbTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDbTableIsMutable();
        dbTable_.add(value);
        onChanged();
      } else {
        dbTableBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder addDbTable(
        int index, com.wr.grpc.lib.table.DBTable value) {
      if (dbTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDbTableIsMutable();
        dbTable_.add(index, value);
        onChanged();
      } else {
        dbTableBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder addDbTable(
        com.wr.grpc.lib.table.DBTable.Builder builderForValue) {
      if (dbTableBuilder_ == null) {
        ensureDbTableIsMutable();
        dbTable_.add(builderForValue.build());
        onChanged();
      } else {
        dbTableBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder addDbTable(
        int index, com.wr.grpc.lib.table.DBTable.Builder builderForValue) {
      if (dbTableBuilder_ == null) {
        ensureDbTableIsMutable();
        dbTable_.add(index, builderForValue.build());
        onChanged();
      } else {
        dbTableBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder addAllDbTable(
        java.lang.Iterable<? extends com.wr.grpc.lib.table.DBTable> values) {
      if (dbTableBuilder_ == null) {
        ensureDbTableIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dbTable_);
        onChanged();
      } else {
        dbTableBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder clearDbTable() {
      if (dbTableBuilder_ == null) {
        dbTable_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        dbTableBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public Builder removeDbTable(int index) {
      if (dbTableBuilder_ == null) {
        ensureDbTableIsMutable();
        dbTable_.remove(index);
        onChanged();
      } else {
        dbTableBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public com.wr.grpc.lib.table.DBTable.Builder getDbTableBuilder(
        int index) {
      return getDbTableFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public com.wr.grpc.lib.table.DBTableOrBuilder getDbTableOrBuilder(
        int index) {
      if (dbTableBuilder_ == null) {
        return dbTable_.get(index);  } else {
        return dbTableBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public java.util.List<? extends com.wr.grpc.lib.table.DBTableOrBuilder> 
         getDbTableOrBuilderList() {
      if (dbTableBuilder_ != null) {
        return dbTableBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dbTable_);
      }
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public com.wr.grpc.lib.table.DBTable.Builder addDbTableBuilder() {
      return getDbTableFieldBuilder().addBuilder(
          com.wr.grpc.lib.table.DBTable.getDefaultInstance());
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public com.wr.grpc.lib.table.DBTable.Builder addDbTableBuilder(
        int index) {
      return getDbTableFieldBuilder().addBuilder(
          index, com.wr.grpc.lib.table.DBTable.getDefaultInstance());
    }
    /**
     * <code>repeated .table.DBTable dbTable = 2;</code>
     */
    public java.util.List<com.wr.grpc.lib.table.DBTable.Builder> 
         getDbTableBuilderList() {
      return getDbTableFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.wr.grpc.lib.table.DBTable, com.wr.grpc.lib.table.DBTable.Builder, com.wr.grpc.lib.table.DBTableOrBuilder> 
        getDbTableFieldBuilder() {
      if (dbTableBuilder_ == null) {
        dbTableBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.wr.grpc.lib.table.DBTable, com.wr.grpc.lib.table.DBTable.Builder, com.wr.grpc.lib.table.DBTableOrBuilder>(
                dbTable_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        dbTable_ = null;
      }
      return dbTableBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:table.TableList)
  }

  // @@protoc_insertion_point(class_scope:table.TableList)
  private static final com.wr.grpc.lib.table.TableList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.wr.grpc.lib.table.TableList();
  }

  public static com.wr.grpc.lib.table.TableList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TableList>
      PARSER = new com.google.protobuf.AbstractParser<TableList>() {
    @java.lang.Override
    public TableList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TableList(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TableList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TableList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.wr.grpc.lib.table.TableList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

